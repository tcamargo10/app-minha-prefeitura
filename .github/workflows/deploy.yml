name: Deploy to App Stores

on:
  push:
    branches: [master]
    tags: ['v*']

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      current-version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Setup Expo
        run: |
          echo ${{ secrets.EXPO_TOKEN }} | eas login --non-interactive

      - name: Check if version changed
        id: check
        run: |
          # Obter versÃ£o atual do package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Obter Ãºltima versÃ£o do EAS
          LAST_VERSION=$(eas build:list --platform=android --limit=1 --json | jq -r '.[0].appVersion' 2>/dev/null || echo "none")
          echo "Last deployed version: $LAST_VERSION"

          # Verificar se a versÃ£o mudou
          if [ "$CURRENT_VERSION" != "$LAST_VERSION" ]; then
            echo "Version changed from $LAST_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged: $CURRENT_VERSION"
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi

  deploy-production:
    runs-on: ubuntu-latest
    needs: check-version
    if: startsWith(github.ref, 'refs/tags/v') && needs.check-version.outputs.version-changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Setup Expo
        run: |
          echo ${{ secrets.EXPO_TOKEN }} | eas login --non-interactive

      - name: Build and Submit to Google Play Production
        run: |
          echo "Deploying version ${{ needs.check-version.outputs.current-version }} to Google Play Production"
          eas build --platform android --profile production --auto-submit --non-interactive
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

  deploy-development:
    runs-on: ubuntu-latest
    needs: check-version
    if: github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/v') && needs.check-version.outputs.version-changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Setup Expo
        run: |
          echo ${{ secrets.EXPO_TOKEN }} | eas login --non-interactive

      - name: Build and Submit to Google Play Internal Testing
        run: |
          echo "Deploying version ${{ needs.check-version.outputs.current-version }} to Google Play Internal Testing"
          eas build --platform android --profile development --auto-submit --non-interactive
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

  skip-deploy:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'false'
    steps:
      - name: Skip Deploy
        run: |
          echo "ðŸš« Deploy skipped - version unchanged: ${{ needs.check-version.outputs.current-version }}"
          echo "No changes detected in app version. Skipping build and deploy."
